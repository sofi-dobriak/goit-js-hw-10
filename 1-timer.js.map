{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'flatpickr/dist/themes/material_blue.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  inputDataTimer: document.querySelector('#datetime-picker'),\n  startBtn: document.querySelector('[data-start]'),\n\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nrefs.startBtn.addEventListener('click', () => {\n  timer.start();\n});\n\nlet userSelectedDate = null;\nrefs.startBtn.disabled = true;\n\nconst myTimer = flatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate < new Date()) {\n      iziToast.warning({\n        color: 'red',\n        position: 'topRight',\n        message: 'Please choose a date in the future',\n      });\n\n      refs.startBtn.disabled = true;\n    } else {\n      refs.startBtn.disabled = false;\n    }\n  },\n});\n\nconst timer = {\n  intervalId: null,\n\n  start() {\n    refs.inputDataTimer.disabled = true;\n    refs.startBtn.disabled = true;\n\n    this.intervalId = setInterval(() => {\n      const ms = userSelectedDate - Date.now();\n\n      if (ms < 0) {\n        clearInterval(this.intervalId);\n        refs.inputDataTimer.disabled = false;\n        return;\n      }\n\n      updateTimer(convertMs(ms));\n    }, 1000);\n  },\n};\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimer({ days, hours, minutes, seconds }) {\n  refs.days.textContent = addLeadingZero(days);\n  refs.hours.textContent = addLeadingZero(hours);\n  refs.minutes.textContent = addLeadingZero(minutes);\n  refs.seconds.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["refs","timer","userSelectedDate","flatpickr","selectedDates","iziToast","ms","updateTimer","convertMs","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"+IAOA,MAAMA,EAAO,CACX,eAAgB,SAAS,cAAc,kBAAkB,EACzD,SAAU,SAAS,cAAc,cAAc,EAE/C,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEAA,EAAK,SAAS,iBAAiB,QAAS,IAAM,CAC5CC,EAAM,MAAK,CACb,CAAC,EAED,IAAIC,EAAmB,KACvBF,EAAK,SAAS,SAAW,GAETG,EAAU,mBAAoB,CAC5C,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAE9BF,EAAmB,IAAI,MACzBG,EAAS,QAAQ,CACf,MAAO,MACP,SAAU,WACV,QAAS,oCACjB,CAAO,EAEDL,EAAK,SAAS,SAAW,IAEzBA,EAAK,SAAS,SAAW,EAE5B,CACH,CAAC,EAED,MAAMC,EAAQ,CACZ,WAAY,KAEZ,OAAQ,CACND,EAAK,eAAe,SAAW,GAC/BA,EAAK,SAAS,SAAW,GAEzB,KAAK,WAAa,YAAY,IAAM,CAClC,MAAMM,EAAKJ,EAAmB,KAAK,IAAG,EAEtC,GAAII,EAAK,EAAG,CACV,cAAc,KAAK,UAAU,EAC7BN,EAAK,eAAe,SAAW,GAC/B,MACD,CAEDO,EAAYC,EAAUF,CAAE,CAAC,CAC1B,EAAE,GAAI,CACR,CACH,EAEA,SAASE,EAAUF,EAAI,CAMrB,MAAMG,EAAO,KAAK,MAAMH,EAAK,KAAG,EAC1BI,EAAQ,KAAK,MAAOJ,EAAK,MAAO,IAAI,EACpCK,EAAU,KAAK,MAAQL,EAAK,MAAO,KAAQ,GAAM,EACjDM,EAAU,KAAK,MAASN,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAY,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtDZ,EAAK,KAAK,YAAca,EAAeJ,CAAI,EAC3CT,EAAK,MAAM,YAAca,EAAeH,CAAK,EAC7CV,EAAK,QAAQ,YAAca,EAAeF,CAAO,EACjDX,EAAK,QAAQ,YAAca,EAAeD,CAAO,CACnD,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}